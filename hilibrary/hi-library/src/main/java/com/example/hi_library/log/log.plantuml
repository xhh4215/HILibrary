@startuml

title __LOG's Class Diagram__\n

  namespace com.example.hi_library {
    namespace log {
      class com.example.hi_library.log.HiLog {
          {static} - HI_LOG_PACKAGE : String
          {static} + a()
          {static} + at()
          {static} + d()
          {static} + dt()
          {static} + e()
          {static} + et()
          {static} + i()
          {static} + it()
          {static} + log()
          {static} + log()
          {static} + log()
          {static} + v()
          {static} + vt()
          {static} + w()
          {static} + wt()
          {static} - parseBody()
      }
    }
  }
  

  namespace com.example.hi_library {
    namespace log {
      abstract class com.example.hi_library.log.HiLogConfig {
          {static} + MAX_LEN : int
          {static} ~ HI_STACK_TRACE_FORMATTER : HiStackTraceFormatter
          {static} ~ HI_THREAD_FORMATTER : HiThreadFormatter
          + enable()
          + getGlobalTag()
          + includeThread()
          + injectJsonParser()
          + printers()
          + stackTraceDepth()
      }
    }
  }
  

  namespace com.example.hi_library {
    namespace log {
      interface com.example.hi_library.log.HiLogConfig.JsonParser {
          {abstract} + toJson()
      }
    }
  }
  

  namespace com.example.hi_library {
    namespace log {
      class com.example.hi_library.log.HiLogManager {
          {static} - instance : HiLogManager
          - printers : List<HiLogPrinter>
          + addPrinter()
          + getConfig()
          {static} + getInstance()
          + getPrinters()
          {static} + init()
          + removePrinter()
          - HiLogManager()
      }
    }
  }
  

  namespace com.example.hi_library {
    namespace log {
      class com.example.hi_library.log.HiLogMo {
          + level : int
          + log : String
          + tag : String
          + timeMillis : long
          {static} - simpleDateFormat : SimpleDateFormat
          + HiLogMo()
          + flattenedLog()
          + format()
          + getFlattened()
      }
    }
  }
  

  namespace com.example.hi_library {
    namespace log {
      class com.example.hi_library.log.HiLogType {
          {static} + A : int
          {static} + D : int
          {static} + E : int
          {static} + I : int
          {static} + V : int
          {static} + W : int
      }
    }
  }
  

  namespace com.example.hi_library {
    namespace log {
      interface com.example.hi_library.log.HiLogType.TYPE {
      }
    }
  }
  

  com.example.hi_library.log.HiLogConfig +-down- com.example.hi_library.log.HiLogConfig.JsonParser
  com.example.hi_library.log.HiLogManager o-- com.example.hi_library.log.HiLogConfig : config
  com.example.hi_library.log.HiLogType +-down- com.example.hi_library.log.HiLogType.TYPE


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
